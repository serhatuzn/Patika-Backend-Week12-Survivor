// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Survivor.Data;

#nullable disable

namespace Survivor.Migrations
{
    [DbContext(typeof(SurvivorDbContext))]
    partial class SurvivorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Survivor.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ünlüler"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gönüllüler"
                        });
                });

            modelBuilder.Entity("Survivor.Models.Competitiors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Competitiors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            FirstName = "Ahmet",
                            LastName = "Yılmaz"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            FirstName = "Ayşe",
                            LastName = "Kaya"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            FirstName = "Mehmet",
                            LastName = "Demir"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            FirstName = "Fatma",
                            LastName = "Çelik"
                        });
                });

            modelBuilder.Entity("Survivor.Models.Competitiors", b =>
                {
                    b.HasOne("Survivor.Models.Category", "Category")
                        .WithMany("Competitiors")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Survivor.Models.Category", b =>
                {
                    b.Navigation("Competitiors");
                });
#pragma warning restore 612, 618
        }
    }
}
